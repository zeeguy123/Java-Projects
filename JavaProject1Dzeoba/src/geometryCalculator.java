
import java.awt.event.KeyEvent;
//Ryan D. 12/7/2019.
public class geometryCalculator extends javax.swing.JFrame {

    public geometryCalculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProjectTitle = new javax.swing.JLabel();
        lblAngryGuy = new javax.swing.JLabel();
        lblAngryGuy1 = new javax.swing.JLabel();
        cmdExit = new javax.swing.JButton();
        pnlRectangle = new javax.swing.JPanel();
        lblRectangleTitle = new javax.swing.JLabel();
        lblRectangleImg = new javax.swing.JLabel();
        lblRectangleLength = new javax.swing.JLabel();
        lblRectangleWidth = new javax.swing.JLabel();
        txtRectangleInput1 = new javax.swing.JTextField();
        txtRectangleInput2 = new javax.swing.JTextField();
        cmdRectangle = new javax.swing.JButton();
        lblRectangleOutput = new javax.swing.JLabel();
        pnlSquare = new javax.swing.JPanel();
        lblSquareTitle = new javax.swing.JLabel();
        lblSquareImg = new javax.swing.JLabel();
        lblSquareLength = new javax.swing.JLabel();
        txtSquareInput1 = new javax.swing.JTextField();
        cmdSquare = new javax.swing.JButton();
        lblSquareOutput = new javax.swing.JLabel();
        pnlTriangle = new javax.swing.JPanel();
        lblTitleTriangle = new javax.swing.JLabel();
        lblTriangleImg = new javax.swing.JLabel();
        lblTriangleSide1 = new javax.swing.JLabel();
        lblTriangleSide2 = new javax.swing.JLabel();
        lblTriangleSide3 = new javax.swing.JLabel();
        txtTriangleInput1 = new javax.swing.JTextField();
        txtTriangleInput2 = new javax.swing.JTextField();
        txtTriangleInput3 = new javax.swing.JTextField();
        cmdTriangle = new javax.swing.JButton();
        lblTriangleOutput = new javax.swing.JLabel();
        pnlCircle = new javax.swing.JPanel();
        lblCircleTitle = new javax.swing.JLabel();
        lblCircleImg = new javax.swing.JLabel();
        lblCircleTask1 = new javax.swing.JLabel();
        lblCircleTask2 = new javax.swing.JLabel();
        txtCircleInput1 = new javax.swing.JTextField();
        txtCircleInput2 = new javax.swing.JTextField();
        cmdCircle = new javax.swing.JButton();
        lblCircleOutput1 = new javax.swing.JLabel();
        lblCircleOutput2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(69, 0));

        lblProjectTitle.setFont(new java.awt.Font("Lucida Console", 3, 19)); // NOI18N
        lblProjectTitle.setForeground(new java.awt.Color(222, 97, 179));
        lblProjectTitle.setText("Geometry Calculator!");

        lblAngryGuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Angry-man.gif"))); // NOI18N

        lblAngryGuy1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Angry-man.gif"))); // NOI18N

        cmdExit.setFont(new java.awt.Font("MV Boli", 3, 14)); // NOI18N
        cmdExit.setForeground(new java.awt.Color(243, 123, 217));
        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        pnlRectangle.setBackground(new java.awt.Color(102, 255, 102));
        pnlRectangle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblRectangleTitle.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        lblRectangleTitle.setForeground(new java.awt.Color(231, 95, 132));
        lblRectangleTitle.setText("Rectangle.");

        lblRectangleImg.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        lblRectangleImg.setForeground(new java.awt.Color(231, 95, 132));
        lblRectangleImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rectangle.jpg"))); // NOI18N
        lblRectangleImg.setText("Img here");

        lblRectangleLength.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        lblRectangleLength.setForeground(new java.awt.Color(231, 95, 132));
        lblRectangleLength.setText("Please input the length in CM.");

        lblRectangleWidth.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        lblRectangleWidth.setForeground(new java.awt.Color(231, 95, 132));
        lblRectangleWidth.setText("Please input the width in CM.");

        txtRectangleInput1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        txtRectangleInput1.setForeground(new java.awt.Color(231, 95, 132));
        txtRectangleInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRectangleInput1ActionPerformed(evt);
            }
        });
        txtRectangleInput1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRectangleInput1KeyPressed(evt);
            }
        });

        txtRectangleInput2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        txtRectangleInput2.setForeground(new java.awt.Color(231, 95, 132));
        txtRectangleInput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRectangleInput2ActionPerformed(evt);
            }
        });
        txtRectangleInput2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRectangleInput2KeyPressed(evt);
            }
        });

        cmdRectangle.setBackground(new java.awt.Color(102, 255, 100));
        cmdRectangle.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        cmdRectangle.setForeground(new java.awt.Color(231, 95, 132));
        cmdRectangle.setText("Calculate perimeter and area");
        cmdRectangle.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        cmdRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRectangleActionPerformed(evt);
            }
        });

        lblRectangleOutput.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblRectangleOutput.setForeground(new java.awt.Color(231, 95, 132));

        javax.swing.GroupLayout pnlRectangleLayout = new javax.swing.GroupLayout(pnlRectangle);
        pnlRectangle.setLayout(pnlRectangleLayout);
        pnlRectangleLayout.setHorizontalGroup(
            pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRectangleLayout.createSequentialGroup()
                .addGroup(pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRectangleLayout.createSequentialGroup()
                        .addGroup(pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRectangleLength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRectangleWidth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(pnlRectangleLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(lblRectangleTitle)
                        .addGap(90, 90, 90)))
                .addGroup(pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRectangleImg, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtRectangleInput1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(txtRectangleInput2, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
            .addGroup(pnlRectangleLayout.createSequentialGroup()
                .addComponent(lblRectangleOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(cmdRectangle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlRectangleLayout.setVerticalGroup(
            pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRectangleLayout.createSequentialGroup()
                .addGroup(pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRectangleTitle)
                    .addComponent(lblRectangleImg, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRectangleInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRectangleLength))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRectangleInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRectangleWidth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdRectangle)
                .addGap(10, 10, 10)
                .addComponent(lblRectangleOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlSquare.setBackground(new java.awt.Color(0, 51, 102));
        pnlSquare.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblSquareTitle.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        lblSquareTitle.setForeground(new java.awt.Color(234, 16, 18));
        lblSquareTitle.setText("Square.");

        lblSquareImg.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N
        lblSquareImg.setForeground(new java.awt.Color(234, 16, 18));
        lblSquareImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/square.png"))); // NOI18N

        lblSquareLength.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        lblSquareLength.setForeground(new java.awt.Color(234, 16, 18));
        lblSquareLength.setText("Please input one side length in CM.");

        txtSquareInput1.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        txtSquareInput1.setForeground(new java.awt.Color(234, 16, 18));
        txtSquareInput1.setMinimumSize(new java.awt.Dimension(61, 22));
        txtSquareInput1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSquareInput1KeyPressed(evt);
            }
        });

        cmdSquare.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        cmdSquare.setForeground(new java.awt.Color(234, 16, 18));
        cmdSquare.setText("Calculate perimeter and area");
        cmdSquare.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSquareActionPerformed(evt);
            }
        });

        lblSquareOutput.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        lblSquareOutput.setForeground(new java.awt.Color(234, 16, 18));

        javax.swing.GroupLayout pnlSquareLayout = new javax.swing.GroupLayout(pnlSquare);
        pnlSquare.setLayout(pnlSquareLayout);
        pnlSquareLayout.setHorizontalGroup(
            pnlSquareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSquareLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSquareTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(lblSquareImg, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(cmdSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlSquareLayout.createSequentialGroup()
                .addComponent(lblSquareLength, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSquareInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lblSquareOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlSquareLayout.setVerticalGroup(
            pnlSquareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSquareLayout.createSequentialGroup()
                .addGroup(pnlSquareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSquareImg)
                    .addComponent(lblSquareTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(pnlSquareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSquareLength)
                    .addComponent(txtSquareInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cmdSquare)
                .addGap(32, 32, 32)
                .addComponent(lblSquareOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlTriangle.setBackground(new java.awt.Color(153, 255, 255));
        pnlTriangle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblTitleTriangle.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        lblTitleTriangle.setForeground(new java.awt.Color(233, 110, 0));
        lblTitleTriangle.setText("Triangle.");

        lblTriangleImg.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        lblTriangleImg.setForeground(new java.awt.Color(233, 110, 0));
        lblTriangleImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/triangle.png"))); // NOI18N

        lblTriangleSide1.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        lblTriangleSide1.setForeground(new java.awt.Color(233, 110, 0));
        lblTriangleSide1.setText("Please input side 1 in CM.");

        lblTriangleSide2.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        lblTriangleSide2.setForeground(new java.awt.Color(233, 110, 0));
        lblTriangleSide2.setText("Please input side 2 in CM.");

        lblTriangleSide3.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        lblTriangleSide3.setForeground(new java.awt.Color(233, 110, 0));
        lblTriangleSide3.setText("Please input side 3 in CM.");

        txtTriangleInput1.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        txtTriangleInput1.setForeground(new java.awt.Color(233, 110, 0));
        txtTriangleInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTriangleInput1ActionPerformed(evt);
            }
        });
        txtTriangleInput1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTriangleInput1KeyPressed(evt);
            }
        });

        txtTriangleInput2.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        txtTriangleInput2.setForeground(new java.awt.Color(233, 110, 0));
        txtTriangleInput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTriangleInput2ActionPerformed(evt);
            }
        });
        txtTriangleInput2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTriangleInput2KeyPressed(evt);
            }
        });

        txtTriangleInput3.setFont(new java.awt.Font("Yu Gothic Medium", 2, 18)); // NOI18N
        txtTriangleInput3.setForeground(new java.awt.Color(233, 110, 0));
        txtTriangleInput3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTriangleInput3ActionPerformed(evt);
            }
        });
        txtTriangleInput3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTriangleInput3KeyPressed(evt);
            }
        });

        cmdTriangle.setFont(new java.awt.Font("Yu Gothic Medium", 2, 14)); // NOI18N
        cmdTriangle.setForeground(new java.awt.Color(233, 110, 0));
        cmdTriangle.setText("Calculate perimeter and area");
        cmdTriangle.setBorder(new javax.swing.border.MatteBorder(null));
        cmdTriangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTriangleActionPerformed(evt);
            }
        });

        lblTriangleOutput.setFont(new java.awt.Font("Yu Gothic Medium", 3, 12)); // NOI18N
        lblTriangleOutput.setForeground(new java.awt.Color(233, 110, 0));
        lblTriangleOutput.setText("      ");

        javax.swing.GroupLayout pnlTriangleLayout = new javax.swing.GroupLayout(pnlTriangle);
        pnlTriangle.setLayout(pnlTriangleLayout);
        pnlTriangleLayout.setHorizontalGroup(
            pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTriangleLayout.createSequentialGroup()
                .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTriangleLayout.createSequentialGroup()
                        .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTriangleSide2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTriangleLayout.createSequentialGroup()
                                .addComponent(lblTriangleSide3)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(38, 38, 38))
                    .addGroup(pnlTriangleLayout.createSequentialGroup()
                        .addComponent(lblTriangleSide1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTriangleInput2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTriangleInput1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(txtTriangleInput3)))
            .addGroup(pnlTriangleLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(lblTitleTriangle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTriangleImg, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(cmdTriangle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTriangleOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlTriangleLayout.setVerticalGroup(
            pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTriangleLayout.createSequentialGroup()
                .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitleTriangle)
                    .addComponent(lblTriangleImg, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTriangleSide1)
                    .addComponent(txtTriangleInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTriangleSide2)
                    .addComponent(txtTriangleInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlTriangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTriangleSide3)
                    .addComponent(txtTriangleInput3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cmdTriangle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTriangleOutput)
                .addGap(5, 5, 5))
        );

        pnlCircle.setBackground(new java.awt.Color(255, 153, 255));
        pnlCircle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblCircleTitle.setFont(new java.awt.Font("SimSun", 0, 15)); // NOI18N
        lblCircleTitle.setForeground(new java.awt.Color(166, 61, 173));
        lblCircleTitle.setText("Circle.");

        lblCircleImg.setFont(new java.awt.Font("SimSun", 0, 12)); // NOI18N
        lblCircleImg.setForeground(new java.awt.Color(166, 61, 173));
        lblCircleImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/circle.png"))); // NOI18N

        lblCircleTask1.setFont(new java.awt.Font("SimSun", 0, 15)); // NOI18N
        lblCircleTask1.setForeground(new java.awt.Color(166, 61, 173));
        lblCircleTask1.setText("Please input your name.");

        lblCircleTask2.setFont(new java.awt.Font("SimSun", 0, 15)); // NOI18N
        lblCircleTask2.setForeground(new java.awt.Color(166, 61, 173));
        lblCircleTask2.setText("Please input the radius in CM.");

        txtCircleInput1.setFont(new java.awt.Font("SimSun", 0, 15)); // NOI18N
        txtCircleInput1.setForeground(new java.awt.Color(166, 61, 173));
        txtCircleInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCircleInput1ActionPerformed(evt);
            }
        });
        txtCircleInput1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCircleInput1KeyPressed(evt);
            }
        });

        txtCircleInput2.setFont(new java.awt.Font("SimSun", 0, 15)); // NOI18N
        txtCircleInput2.setForeground(new java.awt.Color(166, 61, 173));
        txtCircleInput2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCircleInput2KeyPressed(evt);
            }
        });

        cmdCircle.setFont(new java.awt.Font("SimSun", 0, 12)); // NOI18N
        cmdCircle.setForeground(new java.awt.Color(166, 61, 173));
        cmdCircle.setText("Calculate circumference and area");
        cmdCircle.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        cmdCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCircleActionPerformed(evt);
            }
        });

        lblCircleOutput1.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        lblCircleOutput1.setForeground(new java.awt.Color(166, 61, 173));

        lblCircleOutput2.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        lblCircleOutput2.setForeground(new java.awt.Color(166, 61, 173));

        javax.swing.GroupLayout pnlCircleLayout = new javax.swing.GroupLayout(pnlCircle);
        pnlCircle.setLayout(pnlCircleLayout);
        pnlCircleLayout.setHorizontalGroup(
            pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCircleLayout.createSequentialGroup()
                .addGroup(pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCircleTask2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCircleTask1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCircleInput1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(txtCircleInput2)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCircleLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblCircleTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCircleImg, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(cmdCircle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblCircleOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblCircleOutput1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlCircleLayout.setVerticalGroup(
            pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCircleLayout.createSequentialGroup()
                .addGroup(pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCircleTitle)
                    .addComponent(lblCircleImg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCircleTask1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCircleInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCircleTask2)
                    .addComponent(txtCircleInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCircle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCircleOutput1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCircleOutput2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlRectangle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTriangle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAngryGuy)
                            .addComponent(cmdExit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAngryGuy1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlCircle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblProjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(393, 393, 393))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlRectangle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTriangle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProjectTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAngryGuy)
                        .addGap(10, 10, 10))
                    .addComponent(pnlSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCircle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAngryGuy1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdExit))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRectangleInput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRectangleInput2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRectangleInput2ActionPerformed

    private void txtRectangleInput1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRectangleInput1KeyPressed
        String value = txtRectangleInput1.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtRectangleInput1.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtRectangleInput1.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtRectangleInput1.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtRectangleInput1.getCaretPosition() - value.indexOf(".") <= 2 )
                txtRectangleInput1.setEditable(true);
            else
                txtRectangleInput1.setEditable(false); 
        else 
            txtRectangleInput1.setEditable(false);
    }//GEN-LAST:event_txtRectangleInput1KeyPressed

    private void txtRectangleInput2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRectangleInput2KeyPressed
        String value = txtRectangleInput2.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtRectangleInput2.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtRectangleInput2.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtRectangleInput2.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtRectangleInput2.getCaretPosition() - value.indexOf(".") <= 2 )
                txtRectangleInput2.setEditable(true);
            else
                txtRectangleInput2.setEditable(false); 
        else 
            txtRectangleInput2.setEditable(false);
    }//GEN-LAST:event_txtRectangleInput2KeyPressed

    private void cmdRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRectangleActionPerformed
         //Declaring variables and formulas to be used in the rectangle output.
         if (txtRectangleInput1.getText().length() == 0 || txtRectangleInput2.getText().length() == 0)//Condition for blank input.
             lblRectangleOutput.setText("Please correct your missing input.");
         else
         {         
            double rLength = Double.valueOf(txtRectangleInput1.getText());
            double rWidth = Double.valueOf(txtRectangleInput2.getText());
            double rArea = rLength * rWidth;
            double rPerimeter = (rLength + rWidth)* 2;
            lblRectangleOutput.setText("Area: " + String.format("%.01f", rArea)  + " cm squared. Perimeter: " + String.format("%.01f", rPerimeter) + ".");//Rectangle output print statement with rounding.
         }
    }//GEN-LAST:event_cmdRectangleActionPerformed

    private void txtTriangleInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTriangleInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTriangleInput1ActionPerformed

    private void txtTriangleInput1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTriangleInput1KeyPressed
        String value = txtTriangleInput1.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtTriangleInput1.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtTriangleInput1.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtTriangleInput1.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtTriangleInput1.getCaretPosition() - value.indexOf(".") <= 2 )
                txtTriangleInput1.setEditable(true);
            else
                txtTriangleInput1.setEditable(false); 
        else 
            txtTriangleInput1.setEditable(false); 
    }//GEN-LAST:event_txtTriangleInput1KeyPressed

    private void txtTriangleInput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTriangleInput2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTriangleInput2ActionPerformed

    private void txtTriangleInput2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTriangleInput2KeyPressed
        String value = txtTriangleInput2.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtTriangleInput2.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtTriangleInput2.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtTriangleInput2.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtTriangleInput2.getCaretPosition() - value.indexOf(".") <= 2 )
                txtTriangleInput2.setEditable(true);
            else
                txtTriangleInput2.setEditable(false); 
        else 
            txtTriangleInput2.setEditable(false); 
    }//GEN-LAST:event_txtTriangleInput2KeyPressed

    private void txtTriangleInput3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTriangleInput3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTriangleInput3ActionPerformed

    private void txtTriangleInput3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTriangleInput3KeyPressed
        String value = txtTriangleInput3.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtTriangleInput3.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtTriangleInput3.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtTriangleInput3.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtTriangleInput3.getCaretPosition() - value.indexOf(".") <= 2 )
                txtTriangleInput3.setEditable(true);
            else
                txtTriangleInput3.setEditable(false); 
        else 
            txtTriangleInput3.setEditable(false); 
    }//GEN-LAST:event_txtTriangleInput3KeyPressed

    private void cmdTriangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTriangleActionPerformed
         //Declaring variables and formulas to be used in the triangle output.
         if (txtTriangleInput1.getText().length() == 0 || txtTriangleInput2.getText().length() == 0 || txtTriangleInput3.getText().length() == 0)//Condition for blank input.
             lblTriangleOutput.setText("Please correct your missing input.");
         else
         {
            double tDimension1 = Double.valueOf(txtTriangleInput1.getText());
            double tDimension2 = Double.valueOf(txtTriangleInput2.getText());
            double tDimension3 = Double.valueOf(txtTriangleInput3.getText());
            double tPerimeter = tDimension1 + tDimension2 + tDimension3;
            double s = tPerimeter / 2.0;
            double tArea = Math.sqrt(s  * (s - tDimension1) * (s - tDimension2) * (s - tDimension3));
            if (tArea != tArea)//Condition for when a triangle cannot be produced.
                lblTriangleOutput.setText("The lengths given do not make a valid triangle.");
            else
               lblTriangleOutput.setText("Area: " + String.format("%.01f", tArea)  + " cm squared. Perimeter: " + String.format("%.01f", tPerimeter) + ".");
         }
    }//GEN-LAST:event_cmdTriangleActionPerformed

    private void cmdSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSquareActionPerformed
         //Declaring variables and formulas to be used in the square output.
         if (txtSquareInput1.getText().length() == 0)//Condition for blank input.
            lblSquareOutput.setText("Please correct your missing input.");
         else
         {
            double sLength = Double.valueOf(txtSquareInput1.getText());
            double sArea = Math.pow(sLength,2);
            double sPerimeter = sLength * 4;
            lblSquareOutput.setText("Area: " +  String.format("%.01f", sArea) + " cm squared. Perimeter: " + String.format("%.01f", sPerimeter) + ".");//Square output print statement with rounding.
         }
    }//GEN-LAST:event_cmdSquareActionPerformed

    private void txtSquareInput1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSquareInput1KeyPressed
        String value = txtSquareInput1.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtSquareInput1.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtSquareInput1.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtSquareInput1.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtSquareInput1.getCaretPosition() - value.indexOf(".") <= 2 )
                txtSquareInput1.setEditable(true);
            else
                txtSquareInput1.setEditable(false); 
        else 
            txtSquareInput1.setEditable(false); 
    }//GEN-LAST:event_txtSquareInput1KeyPressed

    private void txtCircleInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCircleInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCircleInput1ActionPerformed

    private void txtCircleInput1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCircleInput1KeyPressed
        String value = txtCircleInput1.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtCircleInput1.setEditable(true);
        else if (l < 9)
            // Accept a character if they haven't typeed more than 9 characters already
            txtCircleInput1.setEditable(true);
        else 
            txtCircleInput1.setEditable(false);
     }//GEN-LAST:event_txtCircleInput1KeyPressed

    private void txtCircleInput2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCircleInput2KeyPressed
        String value = txtCircleInput2.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
            // Always accept backspace and delete
            txtCircleInput2.setEditable(true);
        else if (l < 5 && evt.getKeyChar() == '.' && !value.contains("."))
            // Accept a decimal if they haven't typeed one yet
            txtCircleInput2.setEditable(true);
        else if (l < 3 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && !value.contains(".")) 
            // Accept 0 - 9 if the length is less than 5 and they haven't typed a decimal character
            txtCircleInput2.setEditable(true);
        else if (l < 6 && evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' && value.contains(".")) 
            // Accept 0 to 9 if the position of the digit doesn't result in more than two digits after the decimal
            if (txtCircleInput2.getCaretPosition() - value.indexOf(".") <= 2 )
                txtCircleInput2.setEditable(true);
            else
                txtCircleInput2.setEditable(false); 
        else 
            txtCircleInput2.setEditable(false);
    }//GEN-LAST:event_txtCircleInput2KeyPressed

    private void cmdCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCircleActionPerformed
            //Variables and formulas for the output of the circle.
         if (txtCircleInput1.getText().length() == 0 || txtCircleInput2.getText().length() == 0)//Condition for blank input.
         {
             lblCircleOutput1.setText("Please correct your missing input.");
             lblCircleOutput2.setText("");
         }   
         else
         {   
            double dblCircleRadius = Double.valueOf(txtCircleInput2.getText());
            double cPerimeter = 2 * Math.PI * dblCircleRadius;
            double cArea = Math.PI * Math.pow(dblCircleRadius,2);
            String name = txtCircleInput1.getText();
            //Circle output print statement with rounding..
            lblCircleOutput1.setText("Hello " + name + ". The area of this circle is " + String.format("%.01f", cArea) + " cm squared.");
            lblCircleOutput2.setText("The circumference is " + String.format("%.01f", cPerimeter) + ".");
         }
    }//GEN-LAST:event_cmdCircleActionPerformed

    private void txtRectangleInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRectangleInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRectangleInput1ActionPerformed

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        System.exit(0); //Exit when pressed.
    }//GEN-LAST:event_cmdExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(geometryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(geometryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(geometryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(geometryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new geometryCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCircle;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdRectangle;
    private javax.swing.JButton cmdSquare;
    private javax.swing.JButton cmdTriangle;
    private javax.swing.JLabel lblAngryGuy;
    private javax.swing.JLabel lblAngryGuy1;
    private javax.swing.JLabel lblCircleImg;
    private javax.swing.JLabel lblCircleOutput1;
    private javax.swing.JLabel lblCircleOutput2;
    private javax.swing.JLabel lblCircleTask1;
    private javax.swing.JLabel lblCircleTask2;
    private javax.swing.JLabel lblCircleTitle;
    private javax.swing.JLabel lblProjectTitle;
    private javax.swing.JLabel lblRectangleImg;
    private javax.swing.JLabel lblRectangleLength;
    private javax.swing.JLabel lblRectangleOutput;
    private javax.swing.JLabel lblRectangleTitle;
    private javax.swing.JLabel lblRectangleWidth;
    private javax.swing.JLabel lblSquareImg;
    private javax.swing.JLabel lblSquareLength;
    private javax.swing.JLabel lblSquareOutput;
    private javax.swing.JLabel lblSquareTitle;
    private javax.swing.JLabel lblTitleTriangle;
    private javax.swing.JLabel lblTriangleImg;
    private javax.swing.JLabel lblTriangleOutput;
    private javax.swing.JLabel lblTriangleSide1;
    private javax.swing.JLabel lblTriangleSide2;
    private javax.swing.JLabel lblTriangleSide3;
    private javax.swing.JPanel pnlCircle;
    private javax.swing.JPanel pnlRectangle;
    private javax.swing.JPanel pnlSquare;
    private javax.swing.JPanel pnlTriangle;
    private javax.swing.JTextField txtCircleInput1;
    private javax.swing.JTextField txtCircleInput2;
    private javax.swing.JTextField txtRectangleInput1;
    private javax.swing.JTextField txtRectangleInput2;
    private javax.swing.JTextField txtSquareInput1;
    private javax.swing.JTextField txtTriangleInput1;
    private javax.swing.JTextField txtTriangleInput2;
    private javax.swing.JTextField txtTriangleInput3;
    // End of variables declaration//GEN-END:variables
}
