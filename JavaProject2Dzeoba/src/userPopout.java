//Ryan D. 12/14/2019.
//Imports.
import java.awt.event.KeyEvent;
import java.util.Random;
import java.awt.*;
public class userPopout extends javax.swing.JFrame {
    // Methods defined as strings.
    String OriginalPassword;
    String OriginalUsername;

    public userPopout() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPop = new javax.swing.JPanel();
        cmdExitPop = new javax.swing.JButton();
        cmdEnterPop = new javax.swing.JButton();
        txtPassPop = new javax.swing.JTextField();
        lblPassPop = new javax.swing.JLabel();
        lblUserPop = new javax.swing.JLabel();
        txtUserPop = new javax.swing.JTextField();
        cmdClear2Pop = new javax.swing.JButton();
        cmdClear1Pop = new javax.swing.JButton();
        lblFeedbackPop = new javax.swing.JLabel();
        lblTitlePop = new javax.swing.JLabel();
        lblImgPop = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlPop.setBackground(new java.awt.Color(255, 51, 51));

        cmdExitPop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        cmdExitPop.setText("Exit");
        cmdExitPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitPopActionPerformed(evt);
            }
        });

        cmdEnterPop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        cmdEnterPop.setText("Enter");
        cmdEnterPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEnterPopActionPerformed(evt);
            }
        });

        txtPassPop.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        txtPassPop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassPopKeyPressed(evt);
            }
        });

        lblPassPop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblPassPop.setText("Password: ");

        lblUserPop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblUserPop.setText("Email:");

        txtUserPop.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        txtUserPop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserPopKeyPressed(evt);
            }
        });

        cmdClear2Pop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        cmdClear2Pop.setText("Clear");
        cmdClear2Pop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClear2PopActionPerformed(evt);
            }
        });

        cmdClear1Pop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        cmdClear1Pop.setText("Clear");
        cmdClear1Pop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClear1PopActionPerformed(evt);
            }
        });

        lblFeedbackPop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N

        lblTitlePop.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblTitlePop.setText("Roblox Account Verification");
        lblTitlePop.setInheritsPopupMenu(false);

        lblImgPop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.png"))); // NOI18N

        javax.swing.GroupLayout pnlPopLayout = new javax.swing.GroupLayout(pnlPop);
        pnlPop.setLayout(pnlPopLayout);
        pnlPopLayout.setHorizontalGroup(
            pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPassPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUserPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUserPop)
                    .addComponent(txtPassPop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdClear1Pop)
                    .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cmdEnterPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdExitPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdClear2Pop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnlPopLayout.createSequentialGroup()
                .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPopLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(lblFeedbackPop, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPopLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImgPop)
                            .addComponent(lblTitlePop))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPopLayout.setVerticalGroup(
            pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPopLayout.createSequentialGroup()
                .addComponent(lblTitlePop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(lblImgPop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFeedbackPop, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserPop)
                    .addComponent(txtUserPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdClear1Pop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassPop)
                    .addComponent(txtPassPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdClear2Pop))
                .addGap(22, 22, 22)
                .addComponent(cmdEnterPop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdExitPop))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// I made 2 methods so they could be used called in the main jframe.
    public void SetOriginalPass(String OrigPass){
        OriginalPassword = OrigPass;
 
    }
    public void SetOriginalUsername(String OrigUsername){
        OriginalUsername = OrigUsername;
    }
    
    private void txtPassPopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassPopKeyPressed
        String value = txtPassPop.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
        // Always accept backspace and delete.
        txtPassPop.setEditable(true);
        else if (l < 25)
        // Accept a character if they haven't typed more than 25 characters already.
        txtPassPop.setEditable(true);
        else
        txtPassPop.setEditable(false);
    }//GEN-LAST:event_txtPassPopKeyPressed

    private void txtUserPopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserPopKeyPressed
        String value = txtUserPop.getText();
        int l = value.length();
        if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  evt.getKeyChar() == KeyEvent.VK_DELETE)
        // Always accept backspace and delete.
        txtUserPop.setEditable(true);
        else if (l < 25)
        // Accept a character if they haven't typed more than 25 characters already.
        txtUserPop.setEditable(true);
        else
        txtUserPop.setEditable(false);
    }//GEN-LAST:event_txtUserPopKeyPressed

    private void cmdEnterPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEnterPopActionPerformed
        String strUser = txtUserPop.getText();
        String strPass = txtPassPop.getText();
        // Condition that will verify if the user and pass fields are the same as the first jframe.
        if (strUser.equals(OriginalUsername) && strPass.equals(OriginalPassword))
            lblFeedbackPop.setText("Account creation complete!");
        else
            lblFeedbackPop.setText("Something isn't correct.");
                
//        lblFeedback.setText("Username: " + txtUser.getText().toLowerCase() + " Password: " + value.toLowerCase() + randNumber);
    }//GEN-LAST:event_cmdEnterPopActionPerformed

    private void cmdExitPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitPopActionPerformed
        System.exit(0);// Program will close upon interaction.
    }//GEN-LAST:event_cmdExitPopActionPerformed

    private void cmdClear2PopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClear2PopActionPerformed
        txtPassPop.setText(""); // Pass field will clear upon interaction.
    }//GEN-LAST:event_cmdClear2PopActionPerformed

    private void cmdClear1PopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClear1PopActionPerformed
        txtUserPop.setText(""); // User field will clear upon interaction.
    }//GEN-LAST:event_cmdClear1PopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userPopout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userPopout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userPopout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userPopout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userPopout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdClear1Pop;
    private javax.swing.JButton cmdClear2Pop;
    private javax.swing.JButton cmdEnterPop;
    private javax.swing.JButton cmdExitPop;
    private javax.swing.JLabel lblFeedbackPop;
    private javax.swing.JLabel lblImgPop;
    private javax.swing.JLabel lblPassPop;
    private javax.swing.JLabel lblTitlePop;
    private javax.swing.JLabel lblUserPop;
    private javax.swing.JPanel pnlPop;
    private javax.swing.JTextField txtPassPop;
    private javax.swing.JTextField txtUserPop;
    // End of variables declaration//GEN-END:variables
}
